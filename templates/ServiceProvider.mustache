<?php namespace {{Vendor}}\{{Package}};

use Illuminate\Support\ServiceProvider as LaravelServiceProvider;


class ServiceProvider extends LaravelServiceProvider {

    /**
     * Indicates if loading of the provider is deferred.
     *
     * @var bool
     */
    protected $defer = false;

    /**
     * Bootstrap the application events.
     *
     * @return void
     */
    public function boot() {

        $this->handleConfigs();
        // $this->handleMigrations();
        // $this->handleViews();
        // $this->handleTranslations();
        // $this->handleAssets();
        // $this->handleRoutes();
    }

    /**
    * Register the service provider.
    *
    * @return void
    */
    public function register() {

        // Bind any implementations that you want resolved from the ioc.

    }

    /**
    * Get the services provided by the provider.
    *
    * @return array
    */
    public function provides() {

        return [];
    }

    private function handleConfigs() {

        $configPath = __DIR__ . '/../config/{{package}}.php';
        $this->publishes([$configPath => config_path('{{package}}.php')]);
        $this->mergeConfigFrom($configPath, '{{package}}');
    }

    private function handleTranslations() {

        $this->loadTranslationsFrom( __DIR__.'/../lang', '{{package}}');
        $this->publishes([__DIR__.'/../lang' => base_path('resources/lang/vendor/{{package}}')]);
    }

    private function handleViews() {

        $this->loadViewsFrom( __DIR__.'/../views', '{{package}}');
        $this->publishes([__DIR__.'/../views' => base_path('resources/views/vendor/{{package}}')], 'views');
    }

    private function handleMigrations() {

        $this->publishes([__DIR__ . '/../migrations' => database_path('/migrations')], 'migrations');
    }

    private function handleAssets() {

        $this->publishes([__DIR__.'/../assets' => public_path('vendor/{{package}}'),], 'public');
    }

    private function handleRoutes() {

        include __DIR__.'/../routes.php';
    }

}